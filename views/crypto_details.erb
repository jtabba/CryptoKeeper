
<img class="logo" src="media/logo.png" alt="">

<div class="chart_container">
  <div class="chart_values">
    <h1 style="font-weight: 400; color: goldenrod;">Bitcoin</h1>
    <p style="padding-bottom: 0px; margin: 10px 0px 0px 0px; font-weight: bold;">Symbol</p>
    <p style="color: grey; margin: 5px;">BTC</p>
    <p style="padding-bottom: 0px; margin: 20px 0px 0px 0px; font-weight: bold;">Total supply</p>
    <p style="color: grey; margin: 5px;">21 000 000</p>
    <p style="padding-bottom: 0px; margin: 20px 0px 0px 0px; font-weight: bold;">Circulating supply</p>
    <p style="color: grey; margin: 5px;">18 654 256</p>
    <p style="padding-bottom: 0px; margin: 20px 0px 0px 0px; font-weight: bold;">Algorithm</p>
    <p style="color: grey; margin: 5px;">Proof-of-Work</p>
    <p style="padding-bottom: 0px; margin: 20px 0px 0px 0px; font-weight: bold;">Code language</p>
    <p style="color: grey; margin: 5px;">C++</p>
  </div>
  <div style="margin-top: -100px; font-size: 20px; font-weight: 200; color: white;" class="chart_canvas">
    <p style="margin: 125px 0px -175px 0px;">3 Month Price Chart</p>
    <canvas id="btcChart"></canvas>
  </div>
</div>


<script>

    ///  Calling API and modeling data for each chart ///
const btcData = async () => {
  const response = await fetch('https://min-api.cryptocompare.com/data/v2/histoday?fsym=BTC&tsym=USD&limit=100&api_key=0646cc7b8a4d4b54926c74e0b20253b57fd4ee406df79b3d57d5439874960146');
  const json = await response.json();
  const data = json.Data.Data
  const times = data.map(obj => obj.time)
  const prices = data.map(obj => obj.high)
  return {
    times,
    prices
  }
}


/// Error handling ///
function checkStatus(response) {
  if (response.ok) {
    return Promise.resolve(response);
  } else {
    return Promise.reject(new Error(response.statusText));
  }
}


/// Charts ///
let createBtcChart

async function printBtcChart() {
  let { times, prices } = await btcData()

  let btcChart = document.getElementById('btcChart').getContext('2d');

  let gradient = btcChart.createLinearGradient(0, 0, 0, 400);

  gradient.addColorStop(0, 'rgba(247,147,26,.5)');
  gradient.addColorStop(.425, 'rgba(255,193,119,0)');

  Chart.defaults.global.defaultFontFamily = 'Red Hat Text';
  Chart.defaults.global.defaultFontSize = 15;

  createBtcChart = new Chart(btcChart, {
    type: 'line',
    data: {
      labels: times,
      datasets: [{
        label: '$',
        data: prices,
        backgroundColor: gradient,
        borderColor: 'rgba(247,147,26,1)',
        borderJoinStyle: 'round',
        borderCapStyle: 'round',
        borderWidth: 3,
        pointRadius: 0,
        pointHitRadius: 10,
        lineTension: .2,
      }]
    },

    options: {
      title: {
        display: false,
        text: 'Crypto Chart',
        fontSize: 35
      },

      legend: {
        display: false
      },

      layout: {
        padding: {
          left: 0,
          right: 0,
          top: 0,
          bottom: 0
        }
      },

      scales: {
        xAxes: [{
          display: true,
          gridLines: {
            display: true,
            color: 'rgba(250,250,250,0.1)',
          }
        }],
        yAxes: [{
          display: true,
          gridLines: {
            display: true,
            color: 'rgba(250,250,250,0.1)'
          }
        }]
      },

      tooltips: {
        callbacks: {
          //This removes the tooltip title
          title: function() {}
       },
        //this removes legend color
        displayColors: false,
        yPadding: 10,
        xPadding: 10,
        position: 'nearest',
        caretSize: 10,
        backgroundColor: 'rgba(255,255,255,.9)',
        bodyFontSize: 15,
        bodyFontColor: '#303030' 
      }
    }
  });
}

async function updateBitcoinPrice() {
  let { times, prices } = await btcData()
  let currentPrice = prices[prices.length-1].toFixed(2);

  document.getElementById("btcPrice").innerHTML = "$" + currentPrice;
}

updateBitcoinPrice()

printBtcChart()

</script>


<%# <div class="chart_container">
  <div class="chart_values">
    <h1 style="font-weight: 400; color: goldenrod;">Bitcoin</h1>
    <p>Symbol</p>
    <p>Current price</p>
    <p>Algorithm</p>
    <p>Total supply</p>
    <p>Circulating supply</p>
    <p>24 change</p>
  </div>
  <div class="chart_canvas">
    <canvas id="chart" width="300" height="200"></canvas>
  </div>
</div>

<script>

let LINEDATA = [];
let data = [];
let labels = [];

graph();
setInterval("graph()", 30000);

function graph() {
    axios.get(`https://api.coindesk.com/v1/bpi/historical/close.json?start=${moment(new Date()).subtract(1, 'month').format('YYYY-MM-DD')}&end=${moment(new Date()).format('YYYY-MM-DD')}`)
    .then((response) => {
    LINEDATA = { ...response.data.bpi };
    data = Object.keys(LINEDATA).map(key => LINEDATA[key]);
    labels = Object.keys(LINEDATA);
      console.log(data);
      console.log(labels);
    new Chart(document.getElementById("chart"), {
      type: 'line',
      data: {
        labels: labels,
        datasets: [
          {
            label: 'Bitcoin',
            data: data,
            borderColor: "goldenrod",
            backgroundColor: "rgba(250,250,250,0.05",
          }
        ]
      }
    });
  });
}

</script> %>